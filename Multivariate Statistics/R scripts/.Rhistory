install.packages(matlib)
install.packages("matlib")
install.packages("matlib")
x1 <- c(30, 90, -10, 10, 30, 60, 0, 40)
x2 <- c(-8, 7, -2, 0, -2, 0, -2, 1)
x3 <- c(-1, 6, 4, 2, 5, 3, 4, 2)
p <- 3
# When we are in teorical point view should be written, when we have samples we can obtain using cov, like here
dat <- data.frame(x1, x2, x3)
print("The Mean is given by")
mean.dat <- colMeans(dat)
print("The cov is given by")
cov.dat <- cov(dat)
print("The inverse of the cov is given by")
invcov.dat <- inv(t(t(cov.dat)))
invcov.dat <- inv(t(t(cov.dat)))
install.packages("matlib")
x1 <- c(30, 90, -10, 10, 30, 60, 0, 40)
x2 <- c(-8, 7, -2, 0, -2, 0, -2, 1)
x3 <- c(-1, 6, 4, 2, 5, 3, 4, 2)
p <- 3
# When we are in teorical point view should be written, when we have samples we can obtain using cov, like here
dat <- data.frame(x1, x2, x3)
print("The Mean is given by")
mean.dat <- colMeans(dat)
print("The cov is given by")
cov.dat <- cov(dat)
print("The inverse of the cov is given by")
invcov.dat <- inv(t(t(cov.dat)))
FoodPriceUSA <- read.delim2("~/Documents/Course/Multivariate Statistics/BD/FoodPriceUSA.txt")
View(FoodPriceUSA)
FoodPriceUSA <- read.delim2("~/Documents/Course/Multivariate Statistics/R scripts/BD/FoodPriceUSA.txt")
View(FoodPriceUSA)
library(readxl)
SimpleData <- read_excel("Documents/Course/Multivariate Statistics/R scripts/BD/SimpleData.xls")
View(SimpleData)
path_data <- "~/Documents/Course/Multivariate Statistics/R scripts/BD/SimpleData.xls"
simple <- read_excel(path_data)
sc <- var(simple)
print(eigen(sc))
#
#Capitulo: An?lise Fatorial
#
########################################
########################################
# Sec??o: AF na pr?tica
#(exemplifica??o com o ficheiro DadosGarciaMarques2004.sav
########################################
########################################
#LEITURA DOS DADOS:
install.packages("foreign")
library(foreign)  # for reading data stored by SPSS
data<-read.spss("DadosGarciaMarques2004.sav", to.data.frame = TRUE)
setwd("~/Documents/Course/Multivariate Statistics/R scripts")
data<-read.spss("DadosGarciaMarques2004.sav", to.data.frame = TRUE)
setwd("~/Documents/Course/Multivariate Statistics/R scripts")
data<-read.spss("BD/DadosGarciaMarques2004.sav", to.data.frame = TRUE)
view(dat)
view(data)
view(data)
View(data)
#######
#Prepara??o dos dados
#Para considerar apenas dados n?o omissos usar:
datax <- data[complete.cases(data), ]
#
# Capitulo: An�lise Fatorial
#
########################################
########################################
# Sec��o: AF na pr�tica
# (exemplifica��o com o ficheiro DadosGarciaMarques2004.sav
########################################
########################################
# LEITURA DOS DADOS:
install.packages("foreign")
install.packages("foreign")
#
# Capitulo: An�lise Fatorial
#
########################################
########################################
# Sec��o: AF na pr�tica
# (exemplifica��o com o ficheiro DadosGarciaMarques2004.sav
########################################
########################################
# LEITURA DOS DADOS:
install.packages("foreign")
library(foreign) # for reading data stored by SPSS
data <- read.spss("DadosGarciaMarques2004.sav", to.data.frame = TRUE)
#######
# Prepara��o dos dados
# Para considerar apenas dados n�o omissos usar:
datax <- data[complete.cases(data), ]
# eliminar a primeira coluna (n�o � variavel)
dados <- data[, -1]
#######
# Modelo fatorial coisas
install.packages("psych")
library(psych)
install.packages("GPArotation")
library(GPArotation)
###
# Extra��o dos fatores via ACP:
# para dados n�o normalizados
###
rMatrix <- cov(dados)
# Determina��o dos pesos factoriais
(AF <- principal(rMatrix, nfactors = 2, residuals = TRUE, rotate = "quartimax", covar = TRUE))
# NOTA: "rotate" pode ser: "none", "varimax", "quartimax", "promax", "oblimin", "simplimax", "cluster"
###
# para dados normalizados usar
rMatrix <- cor(dados)
########
# Obten��o das estimativas das pontua��es (factor scores)
factor.scores(dados, f = AF, method = c("Bartlett"))
###
# Extra��o dos fatores via ACP:
# para dados n�o normalizados
###
rMatrix <- cov(dados)
# Determina��o dos pesos factoriais
(AF <- principal(rMatrix, nfactors = 2, residuals = TRUE, rotate = "quartimax", covar = TRUE))
# NOTA: "rotate" pode ser: "none", "varimax", "quartimax", "promax", "oblimin", "simplimax", "cluster"
###
# para dados normalizados usar
rMatrix <- cor(dados)
var(dados)
###
# Extra��o dos fatores via ACP:
# para dados n�o normalizados
###
rMatrix <- cov(dados)
# Determina��o dos pesos factoriais
(AF <- principal(rMatrix, nfactors = 2, residuals = TRUE, rotate = "quartimax", covar = TRUE))
########
# Obten��o das estimativas das pontua��es (factor scores)
factor.scores(dados, f = AF, method = c("Bartlett"))
